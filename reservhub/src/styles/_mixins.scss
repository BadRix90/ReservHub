@use 'sass:map';
@use 'variables' as *;

// ===== BREAKPOINT SYSTEM =====
$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
) !default;

@mixin respond-up($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin respond-down($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: calc(#{map.get($breakpoints, $breakpoint)} - 1px)) {
      @content;
    }
  }
}

@mixin respond-between($lower, $upper) {
  @if map.has-key($breakpoints, $lower) and map.has-key($breakpoints, $upper) {
    @media (min-width: map.get($breakpoints, $lower)) and (max-width: calc(#{map.get($breakpoints, $upper)} - 1px)) {
      @content;
    }
  }
}

// ===== LAYOUT MIXINS =====
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin container($max-width: 1200px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 1rem;
}

@mixin center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// ===== ANIMATION MIXINS =====
@mixin smooth-transition($property: all, $duration: 0.3s) {
  transition: $property $duration ease-in-out;
}

@mixin hover-lift {
  transition: transform 0.2s ease;
  
  &:hover {
    transform: translateY(-2px);
  }
}

// ===== BUTTON MIXINS =====
@mixin btn-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
}

@mixin btn-primary($bg: $primary, $text: $black) {
  @include btn-reset;
  background: $bg;
  color: $text;
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  font-weight: 500;
  @include smooth-transition();
  
  &:hover {
    background: darken($bg, 10%);
    transform: translateY(-1px);
  }
}

// ===== TEXT MIXINS =====
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// ===== THEME SYSTEM MIXIN =====
@mixin theme-light {
  --primary: #{$light-primary};
  --primary-dark: #{$light-primary-dark};
  --primary-light: #{$light-primary-light};
  --secondary: #{$light-secondary};
  --accent: #{$light-accent};
  
  --surface: #{$light-surface};
  --surface-alt: #{$light-surface-alt};
  --surface-hover: #{$light-surface-hover};
  
  --text-primary: #{$light-text-primary};
  --text-secondary: #{$light-text-secondary};
  --text-muted: #{$light-text-muted};
  
  --border-color: #{$light-border};
  --shadow-sm: #{$shadow-light-sm};
  --shadow-md: #{$shadow-light-md};
  --shadow-lg: #{$shadow-light-lg};
  --shadow-xl: #{$shadow-light-xl};
  --shadow-glow: #{$shadow-glow-light};
  
  --success: #{$success-light};
  --warning: #{$warning-light};
  --error: #{$error-light};
  --info: #{$info-light};
  
  --cat-reservist: #{map.get($categories-light, 'reservist')};
  --cat-heimatschutz: #{map.get($categories-light, 'heimatschutz')};
  --cat-uebungen: #{map.get($categories-light, 'uebungen')};
  --cat-rechtliches: #{map.get($categories-light, 'rechtliches')};
  --cat-cyber: #{map.get($categories-light, 'cyber')};
  --cat-news: #{map.get($categories-light, 'news')};
}

@mixin theme-dark {
  --primary: #{$dark-primary};
  --primary-dark: #{$dark-primary-dark};
  --primary-light: #{$dark-primary-light};
  --secondary: #{$dark-secondary};
  --accent: #{$dark-accent};
  
  --surface: #{$dark-surface};
  --surface-alt: #{$dark-surface-alt};
  --surface-hover: #{$dark-surface-hover};
  
  --text-primary: #{$dark-text-primary};
  --text-secondary: #{$dark-text-secondary};
  --text-muted: #{$dark-text-muted};
  
  --border-color: #{$dark-border};
  --shadow-sm: #{$shadow-dark-sm};
  --shadow-md: #{$shadow-dark-md};
  --shadow-lg: #{$shadow-dark-lg};
  --shadow-xl: #{$shadow-dark-xl};
  --shadow-glow: #{$shadow-glow-dark};
  
  --success: #{$success-dark};
  --warning: #{$warning-dark};
  --error: #{$error-dark};
  --info: #{$info-dark};
  
  --cat-reservist: #{map.get($categories-dark, 'reservist')};
  --cat-heimatschutz: #{map.get($categories-dark, 'heimatschutz')};
  --cat-uebungen: #{map.get($categories-dark, 'uebungen')};
  --cat-rechtliches: #{map.get($categories-dark, 'rechtliches')};
  --cat-cyber: #{map.get($categories-dark, 'cyber')};
  --cat-news: #{map.get($categories-dark, 'news')};
}

@mixin apply-theme {
  @include theme-light;
  
  &.dark-theme {
    @include theme-dark;
  }
  
  @media (prefers-color-scheme: dark) {
    &:not(.light-theme) {
      @include theme-dark;
    }
  }
}